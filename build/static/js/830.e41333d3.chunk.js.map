{"version":3,"file":"static/js/830.e41333d3.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useEffect, useState,useContext } from \"react\";\r\nimport { useParams ,useHistory} from \"react-router-dom\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceForm.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst UpdatePlace = () => {\r\n  const auth =useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n\r\n  const placeId = useParams().placeId;\r\n\r\n  const history =useHistory();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: { value: \"\", isValid: false },\r\n      description: { value: \"\", isValid: false },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\r\n\r\n        setLoadedPlace(responseData.place);\r\n\r\n        setFormData(\r\n          {\r\n            title: { value: responseData.place.title, isValid: true },\r\n            description: { value: responseData.place.description, isValid: true },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {\r\n        // Handle error\r\n      }\r\n    };\r\n\r\n    fetchPlace(); // âœ… Call the function inside useEffect\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, \r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n  \r\n      // Redirect after updating (optional)\r\n      history.push('/'+auth.userId+'/places');\r\n    } catch (err) {\r\n      // Handle error\r\n    }\r\n  };\r\n  \r\n\r\n  if(isLoading){\r\n    return(\r\n      <div className=\"center_spinner\">\r\n        <Card>\r\n          <LoadingSpinner />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n\r\n      {isLoading && (\r\n        <div className=\"center_spinner\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title} // âœ… Fixed issue\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (at least 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description} // âœ… Fixed issue\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React,{useReducer, useEffect} from 'react'\r\nimport './Input.css'\r\nimport {validate} from '../../util/validators'\r\n\r\nconst inputReducer =(state,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value:action.val,\r\n                isValid:validate(action.val,action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return{\r\n                ...state,\r\n                isTouched:true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    \r\n    const [inputState, dispatch]= useReducer(inputReducer,{value:props.initialValue||'',\r\n     isValid:props.initialValid || false,\r\n     isTouched:false})\r\n\r\n     const { id, onInput } = props;\r\n     const { value, isValid } = inputState;\r\n   \r\n     useEffect(() => {\r\n       onInput(id, value, isValid);\r\n     }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event =>{\r\n          dispatch({\r\n            type:'CHANGE' ,\r\n             val: event.target.value,\r\n             validators:props.validators\r\n        })\r\n    };\r\n\r\n    const touchHandler =()=>{\r\n        dispatch({\r\n            type:'TOUCH'\r\n        });\r\n    };\r\n    \r\n    const element=props.element ==='input'   ? \r\n                  (<input \r\n                    id={props.id} \r\n                    type={props.type} \r\n                    placeholder={props.placeholder} \r\n                    onChange={changeHandler} \r\n                    value={inputState.value} \r\n                    onBlur={touchHandler}/>):\r\n                  (<textarea \r\n                     id={props.id} \r\n                     rows={props.rows || 3} \r\n                     onChange={changeHandler} \r\n                     value={inputState.value} \r\n                     onBlur={touchHandler}/>);\r\n\r\n    \r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nexport default ErrorModal;\r\n","import React, { useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Modal.css';\r\nimport Backdrop from './Backdrop';\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}>\r\n        <div className={`modal__content ${props.contentClass}`}>{props.children}</div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>{props.footer}</footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  const nodeRef = useRef(null); // âœ… Use nodeRef to avoid findDOMNode error\r\n\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition \r\n        in={props.show} \r\n        mountOnEnter \r\n        unmountOnExit \r\n        timeout={200} \r\n        classNames=\"modal\"\r\n        nodeRef={nodeRef} // âœ… Pass nodeRef\r\n      >\r\n        <ModalOverlay {...props} ref={nodeRef} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\n// Reducer function to manage form state\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs.hasOwnProperty(inputId)) continue;\r\n        if (!state.inputs[inputId]) continue; // Prevents errors in case of undefined fields\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * Custom hook to manage form state.\r\n * @param {object} initialInputs - Initial state for form inputs.\r\n * @param {boolean} initialFormValidity - Initial validity of the form.\r\n * @returns {[object, function, function]} - Returns form state, input handler, and setFormData function.\r\n */\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity, // State for the entire form\r\n  });\r\n\r\n  // Handles changes in form inputs\r\n  const inputHandler = useCallback(\r\n    (id, value, isValid) => {\r\n      dispatch({\r\n        type: \"INPUT_CHANGE\",\r\n        value: value,\r\n        isValid: isValid,\r\n        inputId: id,\r\n      });\r\n    },\r\n    [dispatch] // Added dispatch to dependencies\r\n  );\r\n\r\n  // Sets form data dynamically (useful for prefilling form data)\r\n  const setFormData = useCallback(\r\n    (inputData, formValidity) => {\r\n      dispatch({\r\n        type: \"SET_DATA\",\r\n        inputs: inputData,\r\n        formIsValid: formValidity,\r\n      });\r\n    },\r\n    [dispatch] // Added dispatch to dependencies\r\n  );\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      setError(null); // Clear previous errors before making a new request\r\n\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try \r\n      {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (ctrl) => ctrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message || \"Something went wrong!\");\r\n        }\r\n\r\n        return responseData;\r\n      } \r\n      catch (err) \r\n      {\r\n        if (err.name === \"AbortError\") \r\n        {\r\n          console.log(\"Fetch request was aborted.\");\r\n          return;\r\n        }\r\n        setError(err.message);\r\n        throw err;\r\n      } \r\n      finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["UpdatePlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","placeId","useParams","history","useHistory","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","place","err","fetchPlace","_jsx","className","children","Card","LoadingSpinner","_jsxs","_Fragment","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","e","contentClass","footerClass","ReactDOM","document","getElementById","nodeRef","useRef","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ref","formReducer","formIsValid","inputId","hasOwnProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","json","filter","ctrl","ok","Error","message","name","console","log","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}