{"version":3,"file":"static/js/656.9ba72708.chunk.js","mappings":"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","sources":["places/pages/NewPlaces.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/ImageUpload.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React,{useContext} from 'react';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport './PlaceForm.css';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ImageUpload from '../../shared/components/UIElements/ImageUpload'\r\n\r\nconst NewPlaces = () => {\r\n  const auth=useContext(AuthContext);\r\n  const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: { // âœ… Fixed: Changed from \"Address\" to \"address\" (lowercase)\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image:{\r\n        value:'',\r\n        isValid:false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history =useHistory();\r\n\r\n  const placeSubmitHandler =async event => {\r\n    event.preventDefault();\r\n    try{\r\n      const formData = new FormData();\r\n        formData.append(\"title\", formState.inputs.title.value);\r\n        formData.append(\"description\", formState.inputs.description.value);\r\n        formData.append(\"address\", formState.inputs.address.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        \r\n\r\n        await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places`, 'POST', formData, {\r\n          Authorization: 'Bearer ' + auth.token\r\n        });\r\n        \r\n       history.push('/');\r\n    }\r\n    catch(err){\r\n\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n     <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n      {isLoading &&<div className='center_spinner'>\r\n        <LoadingSpinner asOverlay />\r\n        </div>}\r\n      <Input \r\n        id=\"title\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Title\" \r\n        validators={[VALIDATOR_REQUIRE()]} \r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={inputHandler}\r\n        initialValue={formState.inputs.title.value} // âœ… Added\r\n        initialValid={formState.inputs.title.isValid} // âœ… Added\r\n      />\r\n      <Input \r\n        id=\"description\"\r\n        element=\"textarea\" \r\n        label=\"Description\" \r\n        validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]} \r\n        errorText=\"Please enter a valid description (at least 5 characters).\"\r\n        onInput={inputHandler}\r\n        initialValue={formState.inputs.description.value} // âœ… Added\r\n        initialValid={formState.inputs.description.isValid} // âœ… Added\r\n      />\r\n      <Input \r\n        id=\"address\"  // âœ… Fixed: Changed from \"Address\" to \"address\" (matches state)\r\n        element=\"input\" \r\n        label=\"Address\" \r\n        validators={[VALIDATOR_REQUIRE()]} \r\n        errorText=\"Please enter a valid address.\"\r\n        onInput={inputHandler}\r\n        initialValue={formState.inputs.address.value} // âœ… Added\r\n        initialValid={formState.inputs.address.isValid} // âœ… Added\r\n      />\r\n      <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\" />\r\n      <Button \r\n        type=\"submit\" \r\n        disabled={!formState.isValid}>\r\n        ADD PLACE\r\n      </Button>\r\n    </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPlaces;\r\n\r\n\r\n//USING USESTATE\r\n/*import React, { useState, useCallback } from \"react\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport \"./NewPlace.css\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nconst NewPlaces = () => {\r\n  // State for each form field\r\n  const [formData, setFormData] = useState({\r\n    title: { value: \"\", isValid: false },\r\n    description: { value: \"\", isValid: false },\r\n    address: { value: \"\", isValid: false },\r\n  });\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  // Function to update state when input changes\r\n  const InputHandler = useCallback((id, value, isValid) => {\r\n    setFormData((prevData) => {\r\n      const updatedFormData = {\r\n        ...prevData,\r\n        [id]: { value, isValid },\r\n      };\r\n\r\n      // Check if the entire form is valid\r\n      let overallFormIsValid = true;\r\n      for (const inputId in updatedFormData) {\r\n        overallFormIsValid = overallFormIsValid && updatedFormData[inputId].isValid;\r\n      }\r\n\r\n      setFormIsValid(overallFormIsValid);\r\n      return updatedFormData;\r\n    });\r\n  }, []);\r\n\r\n  const placeSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(formData); // Send this data to the backend\r\n  };\r\n\r\n  return (\r\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={InputHandler}\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (at least 5 characters).\"\r\n        onInput={InputHandler}\r\n      />\r\n      <Input\r\n        id=\"address\"\r\n        element=\"input\"\r\n        label=\"Address\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid address.\"\r\n        onInput={InputHandler}\r\n      />\r\n      <Button type=\"submit\" disabled={!formIsValid}>\r\n        ADD PLACE\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewPlaces;\r\n */","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React,{useReducer, useEffect} from 'react'\r\nimport './Input.css'\r\nimport {validate} from '../../util/validators'\r\n\r\nconst inputReducer =(state,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value:action.val,\r\n                isValid:validate(action.val,action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return{\r\n                ...state,\r\n                isTouched:true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    \r\n    const [inputState, dispatch]= useReducer(inputReducer,{value:props.initialValue||'',\r\n     isValid:props.initialValid || false,\r\n     isTouched:false})\r\n\r\n     const { id, onInput } = props;\r\n     const { value, isValid } = inputState;\r\n   \r\n     useEffect(() => {\r\n       onInput(id, value, isValid);\r\n     }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event =>{\r\n          dispatch({\r\n            type:'CHANGE' ,\r\n             val: event.target.value,\r\n             validators:props.validators\r\n        })\r\n    };\r\n\r\n    const touchHandler =()=>{\r\n        dispatch({\r\n            type:'TOUCH'\r\n        });\r\n    };\r\n    \r\n    const element=props.element ==='input'   ? \r\n                  (<input \r\n                    id={props.id} \r\n                    type={props.type} \r\n                    placeholder={props.placeholder} \r\n                    onChange={changeHandler} \r\n                    value={inputState.value} \r\n                    onBlur={touchHandler}/>):\r\n                  (<textarea \r\n                     id={props.id} \r\n                     rows={props.rows || 3} \r\n                     onChange={changeHandler} \r\n                     value={inputState.value} \r\n                     onBlur={touchHandler}/>);\r\n\r\n    \r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\n\nexport default ErrorModal;\n","import React, { useRef,useState,useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"../FormElements/Button\";\r\n\r\nconst ImageUpload = (props) => {\r\n  \r\n  const [file,setFile]=useState();\r\n  const [previewUrl,setPreviewUrl]=useState();\r\n  const[isValid,setIsValid]=useState(false);\r\n\r\n  const filePickerRef = useRef(null); // Ensure ref is initialized\r\n  \r\n  useEffect(()=>{\r\n    if(!file)\r\n    {\r\n      return;\r\n    }\r\n    const fileReader =new FileReader();\r\n    fileReader.onload=()=>{\r\n      setPreviewUrl(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n  },[file])\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid =isValid;\r\n    if(event.target.files && event.target.files.length ===1){\r\n       pickedFile =event.target.files[0];\r\n       setFile(pickedFile);\r\n       setIsValid(true);\r\n       fileIsValid=true;\r\n    }\r\n    else\r\n    {\r\n      setIsValid(false);\r\n      fileIsValid=false;\r\n    }\r\n    props.onInput(props.id,pickedFile,fileIsValid);\r\n  };\r\n\r\n  const pickImageHandle = () => {\r\n    if (filePickerRef.current) {\r\n      filePickerRef.current.click(); // Ensure ref is available before clicking\r\n    } else {\r\n      console.error(\"File input ref is not assigned yet.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef} // Attach ref to input\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n        {previewUrl && <img src={previewUrl} alt=\"preview\" />}\r\n        {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandle}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Modal.css';\r\nimport Backdrop from './Backdrop';\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}>\r\n        <div className={`modal__content ${props.contentClass}`}>{props.children}</div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>{props.footer}</footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  const nodeRef = useRef(null); // âœ… Use nodeRef to avoid findDOMNode error\r\n\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition \r\n        in={props.show} \r\n        mountOnEnter \r\n        unmountOnExit \r\n        timeout={200} \r\n        classNames=\"modal\"\r\n        nodeRef={nodeRef} // âœ… Pass nodeRef\r\n      >\r\n        <ModalOverlay {...props} ref={nodeRef} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\n// Reducer function to manage form state\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs.hasOwnProperty(inputId)) continue;\r\n        if (!state.inputs[inputId]) continue; // Prevents errors in case of undefined fields\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * Custom hook to manage form state.\r\n * @param {object} initialInputs - Initial state for form inputs.\r\n * @param {boolean} initialFormValidity - Initial validity of the form.\r\n * @returns {[object, function, function]} - Returns form state, input handler, and setFormData function.\r\n */\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity, // State for the entire form\r\n  });\r\n\r\n  // Handles changes in form inputs\r\n  const inputHandler = useCallback(\r\n    (id, value, isValid) => {\r\n      dispatch({\r\n        type: \"INPUT_CHANGE\",\r\n        value: value,\r\n        isValid: isValid,\r\n        inputId: id,\r\n      });\r\n    },\r\n    [dispatch] // Added dispatch to dependencies\r\n  );\r\n\r\n  // Sets form data dynamically (useful for prefilling form data)\r\n  const setFormData = useCallback(\r\n    (inputData, formValidity) => {\r\n      dispatch({\r\n        type: \"SET_DATA\",\r\n        inputs: inputData,\r\n        formIsValid: formValidity,\r\n      });\r\n    },\r\n    [dispatch] // Added dispatch to dependencies\r\n  );\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      setError(null); // Clear previous errors before making a new request\r\n\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try \r\n      {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (ctrl) => ctrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message || \"Something went wrong!\");\r\n        }\r\n\r\n        return responseData;\r\n      } \r\n      catch (err) \r\n      {\r\n        if (err.name === \"AbortError\") \r\n        {\r\n          console.log(\"Fetch request was aborted.\");\r\n          return;\r\n        }\r\n        setError(err.message);\r\n        throw err;\r\n      } \r\n      finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["NewPlaces","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","Authorization","token","push","err","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","useEffect","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","length","center","src","alt","pickImageHandle","current","click","console","ModalOverlay","content","headerClass","e","contentClass","footerClass","ReactDOM","document","getElementById","nodeRef","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","hasOwnProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","responseData","json","filter","ctrl","ok","Error","message","name","log","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}