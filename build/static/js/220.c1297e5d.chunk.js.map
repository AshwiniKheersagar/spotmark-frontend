{"version":3,"file":"static/js/220.c1297e5d.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/ImageUpload.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React,{useReducer, useEffect} from 'react'\r\nimport './Input.css'\r\nimport {validate} from '../../util/validators'\r\n\r\nconst inputReducer =(state,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value:action.val,\r\n                isValid:validate(action.val,action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return{\r\n                ...state,\r\n                isTouched:true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    \r\n    const [inputState, dispatch]= useReducer(inputReducer,{value:props.initialValue||'',\r\n     isValid:props.initialValid || false,\r\n     isTouched:false})\r\n\r\n     const { id, onInput } = props;\r\n     const { value, isValid } = inputState;\r\n   \r\n     useEffect(() => {\r\n       onInput(id, value, isValid);\r\n     }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event =>{\r\n          dispatch({\r\n            type:'CHANGE' ,\r\n             val: event.target.value,\r\n             validators:props.validators\r\n        })\r\n    };\r\n\r\n    const touchHandler =()=>{\r\n        dispatch({\r\n            type:'TOUCH'\r\n        });\r\n    };\r\n    \r\n    const element=props.element ==='input'   ? \r\n                  (<input \r\n                    id={props.id} \r\n                    type={props.type} \r\n                    placeholder={props.placeholder} \r\n                    onChange={changeHandler} \r\n                    value={inputState.value} \r\n                    onBlur={touchHandler}/>):\r\n                  (<textarea \r\n                     id={props.id} \r\n                     rows={props.rows || 3} \r\n                     onChange={changeHandler} \r\n                     value={inputState.value} \r\n                     onBlur={touchHandler}/>);\r\n\r\n    \r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nexport default ErrorModal;\r\n","import React, { useRef,useState,useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"../FormElements/Button\";\r\n\r\nconst ImageUpload = (props) => {\r\n  \r\n  const [file,setFile]=useState();\r\n  const [previewUrl,setPreviewUrl]=useState();\r\n  const[isValid,setIsValid]=useState(false);\r\n\r\n  const filePickerRef = useRef(null); // Ensure ref is initialized\r\n  \r\n  useEffect(()=>{\r\n    if(!file)\r\n    {\r\n      return;\r\n    }\r\n    const fileReader =new FileReader();\r\n    fileReader.onload=()=>{\r\n      setPreviewUrl(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n  },[file])\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid =isValid;\r\n    if(event.target.files && event.target.files.length ===1){\r\n       pickedFile =event.target.files[0];\r\n       setFile(pickedFile);\r\n       setIsValid(true);\r\n       fileIsValid=true;\r\n    }\r\n    else\r\n    {\r\n      setIsValid(false);\r\n      fileIsValid=false;\r\n    }\r\n    props.onInput(props.id,pickedFile,fileIsValid);\r\n  };\r\n\r\n  const pickImageHandle = () => {\r\n    if (filePickerRef.current) {\r\n      filePickerRef.current.click(); // Ensure ref is available before clicking\r\n    } else {\r\n      console.error(\"File input ref is not assigned yet.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef} // Attach ref to input\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n        {previewUrl && <img src={previewUrl} alt=\"preview\" />}\r\n        {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandle}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Modal.css';\r\nimport Backdrop from './Backdrop';\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}>\r\n        <div className={`modal__content ${props.contentClass}`}>{props.children}</div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>{props.footer}</footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  const nodeRef = useRef(null); // ✅ Use nodeRef to avoid findDOMNode error\r\n\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition \r\n        in={props.show} \r\n        mountOnEnter \r\n        unmountOnExit \r\n        timeout={200} \r\n        classNames=\"modal\"\r\n        nodeRef={nodeRef} // ✅ Pass nodeRef\r\n      >\r\n        <ModalOverlay {...props} ref={nodeRef} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\n// Reducer function to manage form state\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs.hasOwnProperty(inputId)) continue;\r\n        if (!state.inputs[inputId]) continue; // Prevents errors in case of undefined fields\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * Custom hook to manage form state.\r\n * @param {object} initialInputs - Initial state for form inputs.\r\n * @param {boolean} initialFormValidity - Initial validity of the form.\r\n * @returns {[object, function, function]} - Returns form state, input handler, and setFormData function.\r\n */\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity, // State for the entire form\r\n  });\r\n\r\n  // Handles changes in form inputs\r\n  const inputHandler = useCallback(\r\n    (id, value, isValid) => {\r\n      dispatch({\r\n        type: \"INPUT_CHANGE\",\r\n        value: value,\r\n        isValid: isValid,\r\n        inputId: id,\r\n      });\r\n    },\r\n    [dispatch] // Added dispatch to dependencies\r\n  );\r\n\r\n  // Sets form data dynamically (useful for prefilling form data)\r\n  const setFormData = useCallback(\r\n    (inputData, formValidity) => {\r\n      dispatch({\r\n        type: \"SET_DATA\",\r\n        inputs: inputData,\r\n        formIsValid: formValidity,\r\n      });\r\n    },\r\n    [dispatch] // Added dispatch to dependencies\r\n  );\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      setError(null); // Clear previous errors before making a new request\r\n\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try \r\n      {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (ctrl) => ctrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message || \"Something went wrong!\");\r\n        }\r\n\r\n        return responseData;\r\n      } \r\n      catch (err) \r\n      {\r\n        if (err.name === \"AbortError\") \r\n        {\r\n          console.log(\"Fetch request was aborted.\");\r\n          return;\r\n        }\r\n        setError(err.message);\r\n        throw err;\r\n      } \r\n      finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./Auth.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/UIElements/ImageUpload\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: { value: \"\", isValid: false },\r\n      password: { value: \"\", isValid: false },\r\n    },\r\n    false\r\n  );\r\n\r\n  // Toggle between Login and SignUp modes\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined, \r\n          image: undefined, \r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: { value: \"\", isValid: false },\r\n          image: { value: null, isValid: false }, \r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (isLoginMode) {   \r\n      try {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          { \"Content-Type\": \"application/json\" }\r\n        );\r\n        auth.login(responseData.userId,responseData.token);\r\n      } catch (err) {\r\n        \r\n      }\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value); // Send image\r\n\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`, // Using env variable\r\n          \"POST\",\r\n          formData\r\n        );\r\n        \r\n\r\n        auth.login(responseData.userId,responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\" style={{ width: \"50%\", margin: \"auto\" }}>\r\n        {isLoading && (\r\n          <div className=\"center_spinner\">\r\n            <LoadingSpinner asOverlay />\r\n          </div>\r\n        )}\r\n        <h2>{isLoginMode ? \"Login\" : \"Sign Up\"} Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\" />\r\n          )}\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","href","_jsx","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","inputReducer","state","action","value","val","isValid","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","_jsxs","htmlFor","label","errorText","style","Modal","onCancel","onClear","header","show","error","footer","Button","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","length","center","src","alt","pickImageHandle","current","click","console","ModalOverlay","content","headerClass","onSubmit","e","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","nodeRef","_Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","hasOwnProperty","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","ctrl","ok","Error","message","err","name","log","clearError","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","ErrorModal","Card","width","margin","LoadingSpinner","asOverlay","JSON","stringify","login","userId","token","formData","FormData","append","image","ImageUpload","Input","switchModeHandler","prevMode"],"sourceRoot":""}